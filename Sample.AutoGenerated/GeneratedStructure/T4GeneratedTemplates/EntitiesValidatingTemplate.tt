<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Sample.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using Sample.BLLayer.EntityDTOs;
using Sample.BLLayer.Validating.Interfaces;
using Sample.BLLayer.QueryServices.Interfaces;
using Sample.BLLayer.BLUtilities.HelperServices.Interfaces;

namespace <#= NameSpace #>
{
 
    public class <#= Table.Name #>Validating : I<#= Table.Name #>Validating
    { 
        private readonly Lazy<I<#= Table.Name #>QueryService> _entityQueryService;
        private readonly Lazy<<#= Table.CommonServices.Name #>> _commonServices;
        private readonly Lazy<<#= Table.ServiceBuildException.Name #>> _serviceBuildException;

        public <#= Table.Name #>Validating(Lazy<I<#= Table.Name #>QueryService> entityQueryService,
                                      Lazy<<#= Table.CommonServices.Name #>> commonServices,
                                      Lazy<<#= Table.ServiceBuildException.Name #>> serviceBuildException)
        {

            _entityQueryService = entityQueryService;
            _commonServices = commonServices;
            _serviceBuildException = serviceBuildException;

        }
        public void Validate(<#= Table.Name #>DTO entityDTO, bool isNewEntity)
        {

        }
 
    }

}
