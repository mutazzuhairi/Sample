<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Sample.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using System;
using Sample.BLLayer.EntityDTOs;
using Sample.BLLayer.EntityViews;
using Sample.Web.WebUtilities.Interfaces;
using Sample.Web.WebUtilities.Abstractions;
using Sample.BLLayer.QueryServices.Interfaces;
using Sample.BLLayer.UpdateServices.Interfaces;
using Sample.DataLayer.DataUtilities.HelperServices.Interfaces;

namespace <#= NameSpace #>
{
 
    public class <#= Table.Name #>Controller : CustomBaseController<<#= Table.Name #>DTO, <#= Table.Name #>View, I<#= Table.Name #>UpdateService, I<#= Table.Name #>QueryService, <#= Table.IdType #>>
    {
        private readonly Lazy<I<#= Table.Name #>QueryService> _entityQueryService;
        private readonly Lazy<I<#= Table.Name #>UpdateService> _entityUpdateService;
        private readonly Lazy<<#= Table.SystemServiceProvider.Name #>> _systemServiceProvider;
        private readonly Lazy<<#= Table.ApiExceptionBuilder.Name #>> _apiExceptionBuilder;

        public <#= Table.Name #>Controller(Lazy<I<#= Table.Name #>QueryService> entityQueryService,
                                     Lazy<I<#= Table.Name #>UpdateService> entityUpdateService,
                                     Lazy<<#= Table.SystemServiceProvider.Name #>> systemServiceProvider,
                                     Lazy<<#= Table.ApiExceptionBuilder.Name #>> apiExceptionBuilder) :
            base(entityQueryService, entityUpdateService, systemServiceProvider, apiExceptionBuilder)
        {

           _entityQueryService = entityQueryService;
           _entityUpdateService = entityUpdateService;
           _apiExceptionBuilder = apiExceptionBuilder;

        }


    }

}


