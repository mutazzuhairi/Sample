<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Sample.AutoGenerated.HelperClasses" #>
<#@ output extension=".cs" #>
using System;
using AutoMapper;
using Sample.BLLayer.EntityDTOs;
using Sample.DataLayer.Data.Models.Entities;
using Sample.BLLayer.Mapping.Interfaces;
using Sample.BLLayer.Validating.Interfaces;
using Sample.BLLayer.BLUtilities.Abstractions;
using Sample.BLLayer.UpdateServices.Interfaces;
using Sample.DataLayer.Data.Repositries.Interfaces;
using Sample.BLLayer.BLUtilities.HelperServices.Interfaces;
using Sample.DataLayer.DataUtilities.HelperServices.Interfaces;
using Sample.BLLayer.Extends.ExtendServices.Interfaces;

namespace <#= NameSpace #>
{
 
    public class <#= Table.Name #>UpdateService : EntityUpdateService<<#= Table.Name #>, I<#= Table.Name #>Repositry, <#= Table.Name #>DTO, I<#= Table.Name #>Mapping, I<#= Table.Name #>Validating, <#= Table.IdType #>>, I<#= Table.Name #>UpdateService
    {

        private readonly Lazy<I<#= Table.Name #>Repositry> _entityRepositry;
        private readonly Lazy<I<#= Table.Name #>Validating> _entityValidating;
        private readonly Lazy<I<#= Table.Name #>Mapping> _entityMapping;
        private readonly Lazy<<#= Table.CommonServices.Name #>> _commonServices;
        private readonly Lazy<<#= Table.ServiceBuildException.Name #>> _serviceBuildException;
        private readonly Lazy<<#= Table.SystemServiceProvider.Name #>> _systemServiceProvider;
        private readonly <#= Table.Mapper.Name #> _mapper;
        private readonly Lazy<ICacheProvider> _cacheProvider;

        public <#= Table.Name #>UpdateService(Lazy<I<#= Table.Name #>Repositry> entityRepositry,
                                 Lazy<I<#= Table.Name #>Validating> entityValidating,
                                 Lazy<I<#= Table.Name #>Mapping> entityMapping,
                                 Lazy<<#= Table.ServiceBuildException.Name #>> serviceBuildException,
                                 Lazy<<#= Table.SystemServiceProvider.Name #>> systemServiceProvider,
                                 Lazy<<#= Table.CommonServices.Name #>> commonServices,
                                 <#= Table.Mapper.Name #> mapper,
                                 Lazy<<#= Table.ICacheProvider.Name #>> cacheProvider) :
            base(entityRepositry, entityValidating, entityMapping, serviceBuildException, systemServiceProvider, commonServices, mapper, cacheProvider)
        {
            _entityRepositry = entityRepositry;
            _entityValidating = entityValidating;
            _entityMapping = entityMapping;
            _serviceBuildException = serviceBuildException;
            _systemServiceProvider = systemServiceProvider;
            _commonServices = commonServices;
            _mapper = mapper;
            _cacheProvider = cacheProvider;
        }
 
    }

}